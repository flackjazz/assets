%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 25.0.1%%For: (Brady Erickson) ()%%Title: (Asset 93.eps)%%CreationDate: 6/19/21 3:47 PM%%Canvassize: 16383%%BoundingBox: -355 -22 727 45%%HiResBoundingBox: -354.25 -21.7592 726.75 44.6592%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 186.25 11.45 186.25 11.45%AI3_TileBox: -119.75 -384.55 492.25 407.45%AI3_DocumentPreview: Header%AI5_ArtSize: 1081 1081%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1084 674.9 1 2548 1389 26 0 0 6 43 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-353 -529.1%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 0%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 8 8%%BeginData: 3230 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C457D52A8FD0FFFA8A8FD07FFA8A8525227527DFFFFFF7DFFFFFFA8FF%FFFFA8FFFFA8FD0CFFA87D7DA8A8FD04FFA8A8FFFFFF7DFD07FF7DA8FFFF%FF7DA8FD05FFA8A852527D7D527D525252A8FD04FF7DA8FFA87DFD0CFF52%A8A8FD0CFF7D2752F852FFFF527DFFFF272727F8F852527D527DA8F8A8A8%F8F8F82727FF5227F8F8A8FFF8F852FFFFFF7D27F8525227275252A82752%27F87DA8A85227FF277DFFFFA8F8F87D7DFF27527DA87D522727277DA87D%27A87D27F827F8527DFFA8F8F852F8F87DFD0BFF7D27FD07FF7DFD04FF7D%F8F8277DF87DF87DA87D2727F82727FFFFFFA852F827F8527DFD04F8A8FF%A8F8F8F8522727277DA8A852F8F87D7D52FF7DF8F8F827F827F8F8F852A8%F85227A8FF27277D7DF8F8FFA8277D7D522727F87DFFA827A8FF52275227%A8FFA82752F87DA8A82727A8FFA852A8FFFFFF522752F8F827FFFFFF52A8%FF52F8A8FFFFF8277D277D52F82727F8F82727F8F8A8277D7D27527D27F8%F87D7D5227527DA8A85252A85227A8A87DA8FF27F8527DF87DA8277D52FD%04F85227F8F8A8525227A8FF2727A8A82752FFA8FF7D27F8F8F852FFA827%7DFF7DF852277DA852FD04F87D527D52F852FFA8F8F8275227F852FF27F8%27F87DA87D7DFFFFA87DA852F8F8522727527DFFFF7D7D522727277DA8A8%5252A8A8A85227275227A8FF7DF8A8FFA87D5227A8A8FFFF27F827A85227%FF52FF7D52A852277D27527D27F87D7D7D52A827272752F827A8FFA87DFF%FFA8A8FFFF7DF8527D27F8527D7D27F827527DF8525252F8527DA87D5227%7DF8F852FFFFA8A87D7D27277D52F87D7D7D272752A87DF8F8FFA87D7DA8%7D7D7DFF27F82752A87D277DFF7D522727A87D7D7D522752527D7DA87D7D%27F8F87D277D7DA8FFA87D52F8A8FF7D27522752F8F8F8272752275252F8%277D27A8FFA8527DFD05FFA87DA852F852A827FF527DA8A8A8F82727F852%FFFFA8A8A8FF52F8F8FD09FFA87DA87D7D7DFD05FFA8FFFFFFA8A8A8FFFF%FFA8FF7D52A8FFA8A8FFFFFFA8A8FFFFFFFD04A87DFD05FFA87D7DFD08FF%A87DA8FD07FFA87D7D7DA87DFFFFFFA8FD06FFA8A8FD13FFA8FFFFA8FD06%FF7D2752FD7CFFA827A8FD04FFFF%%EndData%ADO_ContainsXMP: MainFirst
%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{userdict /EPSHandler1_pdfmark /cleartomark load put
userdict /EPSHandler1_ReadMetadata_pdfmark {flushfile cleartomark} bind put}
{ userdict /EPSHandler1_pdfmark /pdfmark load put
userdict /EPSHandler1_ReadMetadata_pdfmark {/PUT pdfmark} bind put } ifelse
[/NamespacePush EPSHandler1_pdfmark
[/_objdef {eps_metadata_stream} /type /stream /OBJ EPSHandler1_pdfmark
[{eps_metadata_stream} 2 dict begin
/Type /Metadata def /Subtype /XML def currentdict end /PUT EPSHandler1_pdfmark
[{eps_metadata_stream}
currentfile 0 (% &&end EPS XMP packet marker&&)
/SubFileDecode filter EPSHandler1_ReadMetadata_pdfmark
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164352, 2020/01/30-15:50:38        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:lr="http://ns.adobe.com/lightroom/1.0/"
   xmp:CreatorTool="Adobe Illustrator(R) 8.0"
   xmp:CreateDate="2021-06-19T15:47Z"
   xmp:MetadataDate="2021-06-20T17:56:33-07:00"
   xmpMM:InstanceID="xmp.iid:cc1ee86a-5dcc-41d3-9179-6ec9bfd97f77"
   xmpMM:DocumentID="xmp.did:4c8a78eb-9fd7-40e2-93aa-ad89436a3f5d"
   xmpMM:OriginalDocumentID="xmp.did:4c8a78eb-9fd7-40e2-93aa-ad89436a3f5d">
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4c8a78eb-9fd7-40e2-93aa-ad89436a3f5d"
      stEvt:when="2021-06-19T16:03:38-07:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:cc1ee86a-5dcc-41d3-9179-6ec9bfd97f77"
      stEvt:when="2021-06-20T17:56:33-07:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Macintosh)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>(Brady Erickson) ()</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">(Asset 93.eps)</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>TRADITIONAL</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Flourish divider</rdf:li>
    </rdf:Alt>
   </dc:description>
   <lr:hierarchicalSubject>
    <rdf:Bag>
     <rdf:li>TRADITIONAL</rdf:li>
    </rdf:Bag>
   </lr:hierarchicalSubject>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                      
<?xpacket end="w"?>
% &&end EPS XMP packet marker&&
[/Document
1 dict begin /Metadata {eps_metadata_stream} def
currentdict end /BDC EPSHandler1_pdfmark
[/NamespacePop EPSHandler1_pdfmark
%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A*u0 O0.749721 0.679194 0.670497 0.901457 0 0 0 Xa0 J 0 j 1 w 10 M []0 d0 XR-337.6155 35.8038 m-339.9401 47.1361 -355.3404 44.8115 -346.6232 30.864 C-334.4192 15.1731 -310.0111 -2.84232 -289.9617 -3.71404 C-290.8334 -2.55175 -291.9957 -2.55175 -292.8674 -1.68003 C-295.7731 1.51626 -288.7994 -0.517742 -287.9277 0.644548 C-287.9277 1.80683 -289.6711 1.80683 -290.2522 2.38798 C-293.7391 5.2937 -284.7314 3.84084 -283.8596 2.38798 C-280.9539 1.80684 -282.1162 -1.68003 -279.5011 -2.26117 C-272.2368 -4.29518 -264.9725 -3.42346 -257.7082 -2.26117 C-253.3496 -1.9706 -230.9755 0.063407 -244.3418 2.96913 C-248.991 3.2597 -276.8859 10.524 -273.399 14.8826 C-269.331 14.8826 -276.8859 17.4977 -276.5953 19.2412 C-276.8859 20.4034 -279.2105 21.8563 -276.5953 21.8563 C-272.2368 21.5657 -269.6216 17.2072 -264.9725 17.2072 C-262.6479 16.3354 -255.9647 12.558 -256.5459 9.94285 C-257.7082 9.36171 -256.8364 9.07114 -256.2553 8.78057 C-248.991 4.71256 -239.1116 5.58427 -231.5567 7.61828 C-231.5567 8.49 -233.0095 8.78057 -233.3001 9.65228 C-233.8813 11.9769 -238.2398 12.8486 -237.3681 15.1732 C-234.753 18.9506 -232.1378 23.5997 -227.4887 24.762 C-221.0961 27.3772 -226.0358 39.0001 -210.9261 32.3169 C-203.6618 31.7358 -198.1409 41.0341 -190.2955 36.6755 C-187.9709 35.8038 -184.484 26.796 -186.2275 24.762 C-186.8086 24.1809 -186.8086 23.5997 -185.6463 23.3092 C-181.2877 23.3092 -173.7329 21.5657 -171.9894 26.796 C-168.212 35.2226 -152.8117 37.8378 -150.4871 27.0866 C-149.3248 23.0186 -160.9477 24.1809 -158.3325 27.0866 C-149.9059 31.4452 -165.3063 35.8038 -168.212 24.4715 C-168.7931 18.0789 -158.6231 19.2412 -154.2645 18.66 C-142.9322 20.4034 -136.2491 32.6075 -124.6262 34.6415 C-113.0033 38.7095 -100.5087 42.4869 -88.0141 41.3246 C-71.4515 41.3246 -60.7003 34.3509 -46.7529 26.796 C-43.5566 25.6337 -40.9415 23.8903 -38.6169 21.5657 C-33.9677 16.3354 -27.2846 13.7203 -21.4731 9.65228 C-15.0805 5.58427 -8.68794 11.1051 -2.0048 10.8146 C2.64435 11.6863 7.58409 9.65228 10.7804 14.0109 C12.8144 16.0449 15.7201 19.8223 14.2672 22.728 C9.61808 21.5657 9.90865 14.3014 4.67834 13.1391 C5.55007 14.8826 9.90865 21.2752 5.25948 18.3694 C-0.842528 13.1391 1.48203 16.626 3.22548 21.5657 C2.64435 25.3432 -4.03882 16.0449 -5.78224 15.1731 C-11.0125 12.8486 -9.55969 20.9846 -11.0125 22.728 C-13.6277 22.1469 -13.9183 18.0789 -15.3711 16.0449 C-17.9863 12.558 -17.6957 24.1809 -16.2429 25.9243 C-16.5334 30.2829 -20.0203 18.0789 -19.7297 16.626 C-24.96 23.3092 -13.9183 41.0341 -6.07283 35.8038 C-4.32941 35.2226 -2.58598 37.2566 -0.55196 36.3849 C0.319765 35.5132 2.9349 35.2226 2.35376 34.0603 C0.319765 29.4112 -2.29539 25.0526 -5.49168 21.2752 C-8.97853 14.592 -2.58596 21.5657 -1.71423 23.8903 C2.35378 28.5395 5.84064 37.2566 11.9426 38.7095 C13.9766 36.6755 11.9426 33.4792 10.1992 31.7358 C9.03693 27.0866 21.5315 35.8038 24.1467 36.3849 C33.1544 38.1283 31.1204 35.5132 24.4373 32.6075 C19.4976 30.2829 21.241 24.4715 17.7541 20.9846 C10.7804 6.45599 5.55009 8.48999 -7.81624 7.3277 C3.51607 -3.71404 29.0864 -7.49147 46.2302 -4.00461 C52.6228 -2.26118 28.2147 -0.227172 26.4713 1.80683 C22.6938 3.25969 17.4635 11.3957 23.275 13.4297 C32.8638 17.4977 34.8978 -3.71404 56.4002 -1.09889 C72.091 -0.517745 93.0122 11.6863 61.921 6.16541 C51.1698 5.00313 41.581 12.8486 40.4187 23.8903 C40.4187 24.762 40.4187 25.6337 40.4187 26.5055 C41.581 29.1206 33.7355 36.0943 36.0601 36.6755 C43.615 38.4189 47.683 28.5395 48.5547 32.0263 C48.8453 34.3509 50.2982 36.0943 52.0416 37.5472 C56.9813 39.2906 61.0493 32.3169 66.5702 35.5132 C72.6722 36.966 68.3136 25.9243 72.091 22.728 C73.2533 21.5657 75.2873 18.3694 76.7402 20.9846 C80.8082 28.5395 90.3971 39 99.4048 35.2226 C102.3105 33.1886 111.3183 33.1886 107.8314 27.6677 C104.0539 21.5657 96.2085 21.5657 90.1065 18.9506 C84.5856 18.0789 84.0044 12.2674 80.227 9.07113 C79.6459 8.78056 79.9365 8.48999 80.227 8.19942 C84.8762 3.25969 89.2348 -1.68003 95.9179 -3.42347 C100.8576 -4.58575 104.9257 -0.808321 109.8654 -0.517748 C113.6428 -0.227174 116.258 2.67855 119.1637 4.42198 C128.1714 11.1051 132.2394 22.728 142.4094 28.2489 C125.2657 25.3432 108.7031 17.2071 94.1745 7.90884 C93.0122 6.74655 86.0384 3.84083 88.0724 6.74655 C104.9256 17.4977 123.2317 25.6337 142.4094 31.1546 C149.3831 33.7698 156.938 35.5132 164.2023 36.3849 C170.0137 37.5472 175.5346 39.8718 181.346 37.8378 C192.6783 37.8378 203.7201 34.932 213.5995 29.1206 C217.6675 26.796 222.3167 23.0186 227.2564 24.1809 C220.2827 29.4112 217.0864 41.0341 229.8716 34.3509 C235.9736 32.3169 238.8793 25.9243 244.6907 23.3092 C246.7247 22.4374 249.0493 19.2412 251.0833 19.8223 C249.0493 23.8903 242.9473 26.2149 239.751 29.9923 C238.2982 31.1546 240.6228 32.898 239.4604 34.6415 C239.4604 44.2303 252.5362 34.932 255.7325 31.4452 C258.0571 30.5735 263.2874 20.4034 264.7402 24.4714 C265.3214 27.9583 269.68 32.6075 274.0385 31.1546 C274.6197 30.864 274.9103 30.2829 274.0385 29.7017 C271.4234 27.6677 279.5594 14.3014 281.5934 11.9768 C286.8237 4.42197 295.8314 4.42197 303.0957 0.353966 C307.7449 -2.55175 313.8469 -1.38947 319.0772 -1.38947 C324.8886 -0.22718 332.7341 0.353966 337.3832 3.84083 C337.0927 4.71255 336.221 4.42197 335.6398 4.42197 C330.7001 3.55026 325.7604 5.00312 320.5301 5.00312 C306.292 2.67854 287.986 8.19941 285.6614 24.4714 C285.0803 29.9923 282.7557 35.2226 279.5594 39.5812 C289.1483 38.4189 297.5748 29.1206 299.8994 20.1129 C299.3183 16.626 303.3863 15.4637 303.6769 12.558 C302.8051 9.36169 297.5748 14.0108 296.4126 15.4637 C293.5069 18.3694 290.8917 22.4374 287.6954 25.0526 C286.8237 21.8563 289.4389 17.7883 291.4729 14.8826 C296.7032 9.3617 304.5486 6.45597 312.1035 7.03712 C309.7789 9.65227 303.6769 12.8486 304.8392 16.626 C308.326 21.2752 306.0015 34.0603 302.5146 21.8563 C301.6429 31.4452 315.0092 43.3586 315.8809 26.5054 C312.3941 22.1469 311.5224 16.3354 314.1375 11.3957 C316.4621 5.00312 326.3415 6.74655 331.8624 7.32769 C336.8021 9.65227 342.323 4.71255 346.6816 7.61827 C349.0062 9.3617 351.9119 9.94284 354.8176 8.78055 C356.8516 9.07113 353.0742 -0.51775 355.9799 2.38797 C361.5007 11.3957 361.2102 5.29369 364.1159 8.19941 C364.697 9.3617 367.0216 7.03712 367.6028 8.19941 c368.1839 9.3617 367.0216 9.3617 366.4405 10.2334 C361.7913 14.0109 369.6368 17.2071 369.9273 21.2752 C366.1499 21.5657 361.2102 19.2411 358.5951 24.1809 C357.7233 25.3432 357.4328 27.3772 355.9799 27.3772 C355.1082 27.0866 356.5611 25.3432 354.5271 26.2149 C347.5534 30.5735 352.4931 23.8903 347.2628 21.8563 C346.1005 21.5657 344.6476 21.2752 345.8099 19.8223 C343.4853 19.2411 341.7419 22.1469 339.7079 20.9846 C339.1267 19.8223 342.323 17.4977 342.9042 16.0449 C344.0665 14.592 341.7419 14.8826 341.7419 14.0109 C342.323 11.9768 344.9382 13.7203 346.1005 12.8486 C344.0665 7.61827 335.0587 10.2334 331.8625 13.7203 C330.4096 16.0449 327.5039 20.694 329.8285 23.0186 C337.3834 31.4452 343.776 23.5997 344.9382 28.2489 C344.6476 30.864 347.2628 32.6075 347.2628 35.2226 C348.4251 40.1623 351.912 41.6152 356.2706 39 C361.5009 36.0943 361.2103 30.5735 363.2443 25.6337 C375.1577 39.8718 388.2335 24.762 373.4143 14.8826 C371.9614 14.592 372.5426 13.4297 373.7049 13.1391 C376.6106 12.558 377.1917 9.07113 379.8069 7.90884 C391.4298 -6.03862 370.7992 -5.1669 363.2443 1.22568 C359.1763 2.96912 355.6894 -15.0463 344.6477 -1.09889 C341.4514 3.25969 328.9568 -4.87633 323.436 -4.87633 C313.8471 -8.65376 304.2582 -7.78205 294.0882 -8.36319 C285.9521 -7.78205 277.235 -8.65377 269.6801 -4.58576 C262.4158 -2.55175 255.1515 -1.38947 247.5966 -1.68004 C242.9475 0.063393 237.7172 -4.58576 233.6492 -2.84233 C236.5549 2.38797 242.6569 4.42197 247.8872 6.74655 C247.306 7.03713 L252.5363 7.61828 263.5781 8.78056 265.3215 3.25969 C262.7063 -2.84232 274.6198 -1.38946 275.7821 2.67855 C276.3632 6.74656 261.8346 9.36171 271.7141 9.65228 C273.7481 10.2334 269.3895 11.9769 268.5178 11.1051 C266.1932 10.524 263.5781 11.3957 262.1252 13.1391 C252.2458 18.9506 266.4838 6.74656 253.6986 14.592 C247.0155 16.626 241.204 22.728 234.5209 23.3092 C237.4266 20.1129 241.7852 19.2412 245.272 16.626 C247.8871 15.4637 244.9814 14.592 246.4343 13.4297 c247.8871 12.2674 251.6646 9.65228 248.4683 9.94285 c245.272 10.2334 241.4946 14.3014 238.0077 11.9769 C235.1019 10.524 231.9056 14.3014 229.2905 13.4297 C230.1622 11.3957 235.3925 11.1051 234.8114 8.48999 C233.6491 7.90885 234.5208 7.61827 234.8114 7.03713 C244.4002 0.935118 228.9999 0.644545 224.9319 3.55027 C216.5054 5.58427 214.1808 15.7543 204.8825 16.626 C189.4821 20.9846 176.4064 3.84084 191.5161 -6.32918 C196.1653 -8.94433 205.7542 -9.2349 208.6599 -4.00461 C209.241 -2.84232 208.6599 -1.9706 207.4976 -2.84232 C204.5919 -5.1669 195.2936 -3.71404 197.9087 1.22569 C200.5238 6.74655 204.0107 3.55026 207.7881 3.55026 C207.7881 6.16541 203.4296 7.3277 201.105 6.16541 C190.3538 0.935113 206.0447 17.4977 212.1467 2.0974 C216.2147 -7.49147 201.9767 -11.2689 194.7124 -9.52548 C185.9952 -7.49147 176.697 5.2937 183.3801 13.4297 C185.9952 17.4977 192.0973 17.4977 194.7124 20.694 C194.4218 21.5657 192.969 20.9846 192.0973 21.2752 C186.5764 20.694 195.8747 25.9243 197.037 26.5055 C198.1993 28.83 209.8221 25.9243 205.173 29.1206 C198.1993 33.4792 186.5764 29.4112 179.3121 27.3772 C172.3384 21.8563 169.7232 12.2674 168.561 3.84084 C168.561 2.67855 167.6892 2.38798 167.3987 3.25969 C163.3307 10.2334 161.0061 -3.13289 156.6475 -4.00461 C155.7758 0.935115 160.7155 6.16541 160.7155 11.3957 C161.0061 17.4977 167.3987 17.4977 170.0138 22.1469 C163.3307 19.5317 156.0664 13.4297 154.6135 6.16541 C154.6135 5.58427 154.9041 5.00313 155.4852 5.2937 C158.1004 5.00312 155.4852 -1.09889 154.0324 -2.26118 C151.7078 -4.00461 154.6135 3.55027 153.4512 5.00313 C154.323 20.4034 177.2781 29.7017 190.0633 33.1886 C177.8593 35.2226 160.1344 33.1886 152.5795 21.2752 C150.2549 15.4637 141.2472 7.61828 145.6058 1.51626 C149.0927 -0.517742 146.1869 -2.26118 149.0927 -4.58575 C149.6738 -7.49147 143.5718 -5.1669 141.8284 -4.87632 C137.4698 -3.71404 133.6923 2.09741 129.0432 -1.68003 C122.36 -5.74804 114.8052 -8.36318 107.2503 -9.52548 C110.156 -8.07262 L98.8237 -9.52548 90.3971 -2.84232 81.0988 2.09741 C63.3739 -3.13289 44.4867 -9.81605 25.0184 -7.78204 C12.5238 -6.91033 1.48208 -1.09889 -9.85023 3.84084 C-12.1748 2.96912 -8.10681 -2.55175 -15.3711 -6.03861 C-32.2243 -14.7558 -42.1037 7.3277 -55.4701 12.8486 C-61.2815 16.0449 -65.9306 11.1051 -70.8704 9.07114 C-76.6818 6.16542 -73.195 -2.84232 -67.9647 -3.71404 C-64.1872 -5.1669 -53.4361 0.353972 -60.4098 3.25969 C-62.7344 2.38798 -64.7684 -2.55175 -67.3835 1.51626 C-67.3835 3.55026 -65.6401 6.74656 -63.0249 6.74656 C-45.8812 2.67855 -59.8287 -12.4312 -71.4515 -4.29518 C-77.8441 -1.68003 -80.7498 8.19942 -75.8101 13.4297 C-74.6478 15.1731 -71.4515 16.626 -72.0327 18.9506 C-72.3232 19.5317 -72.0327 20.1129 -71.4515 20.1129 C-66.2212 25.0526 -60.4098 24.4714 -54.0172 25.0526 C-52.8549 25.9243 -56.3418 27.6677 -56.9229 27.9583 C-68.2553 34.0603 -81.6216 34.6415 -93.535 30.2829 C-101.0899 28.83 -106.6107 21.2752 -110.3882 14.8826 C-113.2939 10.2334 -108.0636 6.74655 -106.3202 2.67855 C-101.3805 -2.55175 -90.6293 -1.38946 -85.9801 3.84083 C-80.7498 9.94285 -91.2104 21.2752 -96.4407 14.0109 C-89.1764 11.9768 -93.535 7.90884 -98.4747 6.45598 C-109.807 9.3617 -93.2444 24.1809 -85.6895 15.4637 C-78.1347 8.48999 -85.1084 -2.26118 -92.9538 -5.45747 C-94.1161 -5.74805 -93.8256 -6.61976 -92.9538 -6.91033 C-74.6478 -15.0463 -124.3356 -12.1406 -117.3619 9.07113 C-117.0713 16.3354 -120.5582 6.45598 -122.3016 5.00312 C-123.1733 4.1314 -124.9168 2.0974 -126.0791 3.25969 C-136.8302 -1.09889 -149.906 -8.94434 -162.9817 -5.74805 C-169.3743 -8.36319 -196.6881 6.16541 -181.2877 1.22568 C-159.7854 -8.07263 -145.2568 -4.58576 -127.2413 8.48998 C-126.9508 8.48998 -126.3696 8.19941 -126.079 8.78055 C-126.3696 10.524 -128.9848 9.94284 -130.1471 9.94284 C-146.7097 5.29369 -156.2985 4.71254 -168.7931 18.3694 C-169.0837 18.9506 -169.6648 18.9506 -170.246 18.9506 C-170.5366 18.66 -170.8271 18.3694 -170.8271 17.7883 C-168.212 11.3957 -176.0574 9.65227 -180.416 7.32769 C-184.1934 6.16541 -187.6803 8.78055 -191.4577 8.19941 c-195.2352 7.61827 -192.62 0.644539 -194.9446 -1.97061 C-195.5258 -5.1669 -198.722 -5.45747 -201.0466 -6.61976 C-204.8241 -8.65377 -205.6958 -7.49147 -208.6015 -5.45747 C-213.5412 -3.71404 -214.7035 8.78055 -218.1904 6.74655 C-219.6432 6.16541 -221.9678 4.71255 -219.0621 4.42197 C-214.1224 0.93511 -238.821 -2.84233 -241.4361 -4.00461 C-269.9122 -11.2689 -299.5505 -7.49148 -327.4454 -0.51775 C-340.2306 3.55026 -352.7252 -4.58576 -354.1781 13.7203 C-355.0498 18.3694 -347.7855 21.8563 -344.0081 20.9846 C-339.94 19.2411 -350.6912 29.7017 -351.2724 31.7357 C-356.7932 42.1963 -345.4609 49.7512 -337.3249 40.4529 C-334.1286 36.966 -335.0003 27.9583 -340.8118 33.7697 C-341.3929 36.0943 -339.6495 38.1283 -337.6155 35.8038 Cf1 D-210.9261 22.4374 m-212.0884 22.1469 -218.7715 26.796 -216.7375 23.5997 C-213.2506 18.66 -222.8395 16.626 -226.0358 14.592 C-229.2321 11.6863 -220.5149 14.8826 -219.9338 13.1391 C-212.6695 4.71256 -211.7978 12.8486 -209.4732 7.61828 C-210.3449 7.3277 -210.3449 6.74656 -210.0544 6.16542 C-209.7638 5.00313 -209.1827 6.45599 -208.6015 6.16542 C-206.2769 4.71256 -203.0806 6.45599 -201.0466 4.42198 C-198.1409 2.67855 -193.7823 9.65228 -195.5258 11.9769 C-196.3975 16.626 -189.1332 8.78056 -187.6803 12.2674 C-186.8086 14.3014 -184.484 14.0109 -183.0312 15.7543 C-185.0652 16.3354 -186.8086 15.1732 -188.8426 15.7543 C-193.4918 16.0449 -184.1935 20.694 -188.552 20.1129 C-190.2955 19.5317 -191.7483 19.2412 -193.4918 19.2412 C-197.2692 18.9506 -191.4577 22.1469 -192.9106 23.0186 C-194.3635 23.0186 -194.9446 23.8903 -196.1069 24.1809 c-197.2692 24.4715 -196.3975 26.5055 -197.8503 26.2149 C-200.1749 25.3432 -202.4995 26.796 -204.8241 26.2149 C-206.8581 25.9243 -208.6015 26.2149 -210.3449 27.3772 C-213.8318 27.9583 -210.9261 22.1469 -208.8921 22.1469 C-205.6958 21.5657 -201.6278 22.1469 -200.7561 18.0789 C-199.0126 13.7203 -201.6278 7.3277 -207.1486 9.65228 C-208.0204 9.94285 -208.8921 10.2334 -208.6015 11.3957 C-212.3789 14.592 -215.5752 19.2412 -210.9261 22.4374 Cf43.3245 20.9846 m47.1019 3.55027 65.9891 8.19942 78.4837 11.3957 C81.0988 13.4297 83.714 16.0449 85.4574 18.66 C90.1066 22.1469 96.4991 22.1469 100.8577 25.9243 C104.3446 30.5735 75.2874 20.1129 78.1931 14.592 C78.4837 9.36171 67.1514 23.8903 67.1514 25.9243 c67.1514 26.2149 66.8608 26.796 66.5702 26.796 C65.6985 23.8903 69.7665 20.9846 69.4759 17.4977 C65.4079 19.5317 67.1514 16.0449 63.6645 17.4977 C62.7928 17.7883 60.1776 18.9506 61.3399 16.9166 C61.3399 12.8486 54.0756 23.3092 52.3322 22.728 C50.8793 20.9846 60.4682 13.7203 53.2039 16.9166 C50.8793 17.7883 52.3322 15.4637 52.9133 14.3014 C52.9133 11.3957 44.1962 19.5317 43.3245 20.9846 C43.3245 20.9846 Lf-22.926 -5.45746 m-20.3108 -6.61975 -12.756 -2.55174 -16.2428 -0.517739 C-18.5674 -0.517739 -22.3448 -1.9706 -24.3788 -0.517739 C-24.3788 0.935121 -25.5411 0.935121 -26.7034 1.22569 C-35.7111 5.00313 -42.3943 14.0109 -51.6926 17.7883 C-58.3758 20.4034 -69.1269 20.1129 -72.0327 12.2674 C-72.6138 5.87485 -63.3155 23.8903 -46.7529 9.07114 C-39.4886 3.84084 -33.096 -5.45746 -22.926 -5.45746 Cf-148.1625 9.07114 m-140.3171 9.07114 -133.6339 13.7203 -126.079 14.8826 C-122.5922 16.3354 -128.6942 22.4374 -130.7282 23.0186 C-132.1811 23.3092 -133.9245 23.5997 -135.6679 23.5997 C-137.9925 23.3092 -138.2831 24.1809 -136.249 25.3432 C-134.7962 25.9243 -135.3773 26.796 -136.8302 26.5055 C-139.7359 25.3432 -142.0605 23.3092 -143.8039 20.694 C-142.0605 19.2412 -133.3433 24.1809 -137.9925 18.3694 C-139.1548 18.0789 -138.8642 17.2072 -137.7019 16.9166 C-134.7962 16.0449 -131.8905 19.5317 -128.9848 18.0789 C-129.8565 12.558 -162.4005 9.94285 -148.1625 9.07114 C-148.1625 9.07114 Lf-114.7467 34.0603 m-119.6864 33.4792 -118.8147 28.2489 -115.6185 26.2149 c-109.2259 22.1469 -108.6447 33.1886 -114.7467 34.0603 Cf-346.9138 18.3694 m-350.9818 18.3694 -351.2724 11.3957 -348.3666 9.36171 C-345.4609 8.78056 -341.3929 18.9506 -346.9138 18.3694 Cf140.6661 7.03713 m140.6661 9.65228 135.7264 11.9769 133.6924 9.94285 C133.1112 9.07114 130.4961 6.45599 132.5301 6.16542 C134.8546 5.87484 140.3755 2.67855 140.6661 7.03713 Cf231.6151 4.71255 m237.4266 5.2937 219.4111 11.1051 218.5394 10.8146 C220.5734 5.58427 227.5471 5.58427 231.6151 4.71255 C231.6151 4.71255 Lf-328.6077 5.2937 m-322.2152 5.58427 -331.5135 10.524 -333.838 9.94285 C-340.2306 8.78056 -330.9323 5.00313 -328.6077 5.2937 Cf-104.5767 33.1886 m-105.1578 26.2149 -94.6973 33.7698 -100.2181 35.8038 C-101.671 36.6755 -103.4144 36.0943 -104.2861 34.6415 C-104.2861 34.0603 -104.5767 33.7698 -104.5767 33.1886 Cf33.1544 1.80683 m29.6676 3.55027 27.0524 6.16542 23.8561 7.90885 C18.3352 7.03713 30.5393 -0.227169 33.1544 1.80683 C33.1544 1.80683 Lf-113.5844 2.67855 m-113.5844 -0.517742 -109.807 -5.1669 -106.3201 -4.58575 C-106.6107 -3.71404 -113.875 6.74656 -113.5844 2.67855 C-113.5844 2.67855 Lf140.6661 14.3014 m142.7001 14.0109 146.7681 15.4637 144.7341 17.7883 C142.1189 20.9846 134.8546 14.3014 140.6661 14.3014 C140.6661 14.3014 Lf282.4652 -4.0046 m285.0804 -5.16689 292.6353 1.80684 285.6615 0.64455 C281.8841 0.063404 284.2086 -2.26118 282.4652 -4.0046 C282.4652 -4.0046 Lf259.51 18.66 m255.7326 22.1469 252.5363 25.9243 247.5966 27.6677 C250.7929 23.3092 255.442 21.5657 259.51 18.66 Cf-203.6618 14.8826 m-203.6618 18.66 -206.8581 18.3694 -207.7298 15.1731 C-207.7298 13.4297 -203.3712 11.9769 -203.6618 14.8826 Cf233.3585 14.592 m236.8454 15.1731 225.5131 19.2412 224.932 18.66 C226.6754 16.3354 230.4528 15.4637 233.3585 14.592 C233.3585 14.592 Lf-339.9401 9.07114 m-339.9401 14.592 -343.7175 9.36171 -343.1363 7.03713 C-342.2646 6.45599 -340.8118 6.74656 -340.2306 7.61828 C-339.9401 8.19942 -339.9401 8.48999 -339.9401 9.07114 cf226.966 10.8146 m226.966 11.9769 220.2828 16.3354 218.8299 15.4637 C219.9923 13.1391 224.3508 11.9769 226.966 10.8146 Cf-110.9693 21.8563 m-109.807 21.8563 -107.773 23.0186 -107.773 24.4715 C-108.9353 25.3432 -115.6185 21.5657 -110.9693 21.8563 Cf0 D384.1654 16.9166 m385.3277 18.9506 408.8641 25.3432 403.3432 25.9243 C399.2752 27.0866 393.1732 27.0866 391.7203 31.7358 C387.6523 45.9738 404.7961 37.5472 400.7281 35.5132 C398.4035 34.932 396.9507 32.0263 394.3355 31.7358 C394.0449 31.7358 393.4638 31.7358 393.4638 30.864 c393.4638 28.83 406.2489 27.3772 406.2489 29.7017 C405.9583 31.1546 411.4792 29.7017 412.351 29.7017 C418.453 28.2489 424.8455 31.7358 430.9476 32.0263 C449.2536 35.2226 467.2691 41.6152 486.1562 41.9058 C501.266 39.2906 516.6663 43.0681 531.7761 39.8718 C543.1084 40.1623 546.3047 36.3849 555.603 32.6075 c564.9014 28.83 574.4902 24.1809 583.7885 20.1129 C585.2414 19.5317 584.9508 20.9846 584.3697 21.5657 C576.8148 36.0943 590.7623 45.1021 602.3852 34.0603 C606.4532 30.2829 608.7778 36.0943 612.5552 37.2566 C618.6573 40.4529 629.9896 36.6755 628.5367 28.83 C627.665 25.6337 627.9555 25.3432 631.1518 24.1809 C633.4764 22.728 643.3559 20.1129 640.7407 17.4977 C636.3821 13.4297 638.9972 12.2674 633.1858 9.07113 C643.3558 3.25969 658.4656 3.55027 669.5073 7.03713 C670.379 7.3277 670.0885 8.19942 669.2167 8.19942 C664.5675 9.65228 660.4995 12.2674 656.7221 15.4637 C662.243 16.3354 667.7638 10.2334 673.8659 11.3957 C668.0544 13.7203 663.4053 17.7883 656.7221 18.66 C654.9787 18.66 654.6881 19.5317 654.9787 21.2752 C655.8504 24.4714 659.3373 25.9243 662.243 25.0526 C662.5336 25.0526 662.8242 24.762 663.1147 24.762 C668.9261 21.2752 673.2847 14.3014 681.1302 16.0449 C683.4547 16.626 685.7793 16.0449 687.5228 14.8826 C688.104 14.592 688.3945 14.592 688.6851 14.8826 C694.4965 16.9166 700.0174 19.8223 704.9571 23.0186 C707.8628 25.3432 711.6402 23.3092 714.546 25.3432 C718.0329 26.5055 723.8443 29.9923 726.75 27.3772 C720.3574 20.4034 709.3157 15.7543 704.9571 6.45599 C699.1457 -6.91033 696.8211 -8.07262 683.1642 -10.9783 C682.0019 -11.2689 671.8319 -15.6275 675.6093 -16.7898 C676.481 -16.7898 677.9339 -17.3709 677.0622 -18.5332 C669.5073 -26.3787 663.6959 -18.2426 672.1224 -11.8501 C679.3867 -6.91033 681.1302 2.0974 687.5227 7.90884 C688.685 8.78056 691.8813 12.558 688.685 11.1051 C683.4547 8.78056 678.2244 7.61827 672.9941 5.87484 C670.379 3.55026 666.8921 2.0974 663.4053 1.80683 C652.3636 1.80683 641.6124 3.55027 631.1518 6.45599 C629.1177 6.45599 625.3403 9.94285 624.178 7.61827 C626.2121 -4.58575 608.4872 -12.7218 602.9663 -0.227172 C602.3851 1.22569 602.3851 1.22569 601.5135 0.063401 C598.6077 -2.84232 595.1208 -4.87632 591.0528 -6.03861 C579.43 -8.36318 573.3279 14.3014 587.2754 14.8826 C588.1471 14.8826 589.6 14.8826 589.6 15.7543 C588.4377 18.0789 584.0791 16.626 582.0451 16.626 C577.9771 16.9166 574.1996 14.592 572.4563 10.8146 C569.5505 7.03713 571.5846 1.51626 568.0977 -1.9706 C565.7731 -4.29518 561.124 -2.55175 563.4485 0.644545 C564.6108 4.13141 573.9091 23.0186 564.3202 11.9769 C561.7051 8.78056 560.5428 2.09741 557.0559 0.644545 C553.8596 0.063401 551.2444 -5.45747 547.467 -3.13289 C544.8519 -1.68003 540.2027 -1.09889 541.365 2.96912 C543.3991 11.9769 551.535 17.7883 560.5428 18.9506 C567.5165 20.1129 580.8828 19.2412 566.0636 25.0526 C563.1579 25.6337 561.9956 28.5395 559.671 29.4112 C554.4408 30.2829 548.9198 29.4112 544.5612 26.5055 C531.1949 18.66 537.0063 7.3277 531.7761 -2.84232 C521.6061 -9.81604 515.2134 7.61828 521.6061 14.592 C528.5798 23.8903 538.1687 28.5395 548.3387 32.0263 C535.5536 37.8378 518.1193 21.8563 515.2135 9.65228 C514.3419 5.58427 516.6664 -0.517739 511.7266 -2.26117 C506.2058 -5.45746 498.6509 -6.32918 493.4206 -2.26117 C489.3526 0.353977 487.6092 12.2674 494.2923 11.3957 C493.4206 7.32771 491.096 -0.517737 498.0697 0.063404 C502.1377 0.935121 501.266 7.03713 503.0095 10.2334 C504.4623 23.5997 515.2135 32.6075 527.1269 36.9661 C521.8967 39.5812 515.2134 36.6755 509.1114 36.9661 C497.7791 36.9661 491.9677 26.5055 487.3185 17.7883 C484.4128 14.592 484.1222 10.524 482.3788 6.74656 C479.7636 2.96912 485.8657 2.67855 487.609 0.353977 C490.8053 -3.71403 482.6693 0.353977 481.2164 0.64455 C476.5672 2.67855 472.4992 0.353977 468.1407 -1.09888 C464.0727 2.96912 471.0464 14.3014 474.2427 18.0789 C479.4729 29.4112 514.0511 39.8718 485.8656 39.0001 C478.3107 38.7095 471.6276 33.7698 465.5255 29.9923 C456.2272 23.5997 450.9969 4.42198 436.4683 9.65228 C428.6228 12.558 420.1963 12.8486 412.3509 10.524 C406.83 9.07114 405.3772 1.2257 407.9923 -2.84231 C410.6074 -5.45746 415.2566 -5.45746 415.8378 -1.09888 C416.419 1.51627 417.2906 1.80684 419.6152 1.2257 C429.204 -2.26116 413.8037 -10.1066 409.4452 -5.74803 C405.0866 -4.87632 403.9243 -0.227163 404.796 3.55027 C406.83 13.4297 417.8717 18.0789 425.4266 23.5997 C460.5859 42.7775 391.4297 16.9166 384.1654 16.9166 Cf1 D625.3402 15.1731 m623.8874 16.3354 618.9476 15.1731 622.4345 17.4977 C623.0157 17.7883 622.7251 18.66 622.1439 18.3694 C615.1702 18.0789 623.0156 20.694 622.4345 23.5997 C621.8533 24.1809 619.8194 22.4375 619.8194 23.8903 C620.4006 27.9583 613.7173 20.4034 616.9137 27.9583 C617.7853 33.4792 612.5551 25.0526 611.3928 26.796 c610.2305 28.5395 609.0683 26.5055 608.1965 26.2149 C605.872 25.0526 608.1965 29.9923 608.1965 31.1546 C608.7777 32.0263 608.1965 32.3169 607.3248 32.0263 c605.5814 31.4452 604.4191 30.2829 604.1285 28.5395 C602.0945 26.796 597.7359 34.6415 594.8302 35.5132 C595.9924 31.4452 604.7096 25.6337 594.5396 29.1206 C591.0527 29.1206 598.0265 23.5997 595.1208 24.1809 C589.5999 25.9243 594.8302 21.5657 592.215 22.1469 C590.7622 22.1469 588.147 23.8903 586.9848 23.3092 C588.147 20.4035 594.8302 21.5657 594.8302 17.4977 C594.5397 15.7543 591.9245 16.3354 591.6339 14.592 C590.7623 11.3957 587.2754 9.94286 586.4037 7.03714 C588.4377 7.03714 589.6 9.36171 591.0528 10.524 C599.77 17.2072 591.3434 6.45599 589.3094 3.84084 C592.2151 4.42199 595.702 11.3957 598.3171 7.61828 C598.6077 6.16542 598.8983 6.16542 600.3512 6.45599 C603.8381 7.61828 607.6155 6.16542 610.8118 5.00313 C613.1363 4.71256 609.6495 7.61828 610.5212 8.49 C613.1363 9.07114 616.0421 3.2597 618.3667 4.42199 C619.529 6.16542 611.1024 12.2674 614.8798 11.9769 C616.0421 11.6863 618.0761 11.6863 618.3667 13.1392 c618.6573 14.592 617.2044 14.8826 616.9138 15.7543 C616.0419 17.2072 623.5968 12.8486 625.3402 15.1731 C625.3402 15.1731 Lf462.3293 32.898 m462.3293 32.0263 458.8424 30.864 460.8764 30.2829 C465.5256 30.2829 470.1748 34.6415 473.0805 37.2566 C472.7899 37.8378 472.2088 37.5472 471.6276 37.5472 C465.8162 36.0943 460.0048 36.3849 454.1933 34.6415 C443.4421 30.2829 430.9476 26.2149 422.521 17.4977 C436.1778 21.5657 448.3819 30.2829 462.3293 32.898 Cf527.4174 0.644548 m532.6477 1.80683 527.4174 9.36171 533.5194 18.9506 C526.2551 19.2412 516.0851 1.80683 527.4174 0.644548 C527.4174 0.644548 Lf507.6586 6.74656 m512.5983 11.3957 513.47 18.66 518.9908 23.0186 C522.4777 26.796 526.2551 30.2829 530.0325 33.4792 C523.3494 34.0603 516.9568 25.9243 512.3076 21.5657 C509.4019 17.2072 509.4019 11.9769 507.3679 7.61828 C507.0774 7.3277 507.0774 6.74656 507.6586 6.74656 C507.6586 6.74656 Lf491.6771 27.0866 m482.3788 24.4715 472.2087 14.0109 473.3711 3.55027 C476.858 5.87484 478.3109 11.3957 481.2166 14.592 C484.4128 18.9506 489.062 22.4374 491.6771 27.0866 C491.6771 27.0866 Lf546.5952 4.71255 m550.6632 1.51626 558.2181 11.3957 561.1238 14.592 C562.2861 17.2072 558.2181 15.7543 557.0558 15.1731 C552.116 13.4297 548.3386 9.65228 546.5952 4.71255 Cf686.0698 -0.227169 m693.6246 5.87484 702.9229 12.558 709.8967 19.2412 C701.1795 17.4977 691.3 7.3277 686.0698 -0.227169 Cf438.7929 19.8223 m435.0155 18.9506 431.8192 16.9166 429.2041 14.3014 C432.9815 12.2674 436.1778 17.4977 438.7929 19.8223 Cf0 D-20.6014 12.2674 m-53.7266 25.0526 -40.6509 54.6909 -31.9337 30.5735 C-31.3526 26.796 -29.6091 23.5997 -27.2846 20.694 C-26.7034 18.66 -15.3711 13.1391 -20.6014 12.2674 Cf-291.7051 6.74656 m-296.3542 7.61828 -302.7468 6.16542 -306.2337 10.8146 C-309.7206 14.592 -301.8751 16.3354 -298.9694 15.4637 C-296.9354 15.1731 -293.158 14.3014 -293.158 11.6863 c-293.158 11.1051 -292.5768 10.8146 -292.2862 10.524 C-289.0899 9.65228 -285.8937 6.74656 -291.7051 6.74656 Cf357.1422 14.8826 m357.1422 9.94285 349.8779 11.6863 351.9119 15.7543 C352.4931 20.1129 356.8516 19.2412 357.1422 14.8826 Cf-122.3016 -7.49147 m-124.3356 -7.78204 -130.147 -0.517742 -125.7885 -1.9706 C-124.6262 -2.26118 -119.1053 -7.2009 -122.3016 -7.49147 Cf605.2908 20.9846 m617.4948 18.0789 608.7777 7.3277 600.6416 13.4297 C597.4453 16.0449 601.5133 21.2752 605.2908 20.9846 Cf1 D604.419 19.5317 m600.0604 19.5317 601.2227 13.7203 604.7096 13.4297 C606.453 13.4297 607.6153 14.8826 607.6153 16.626 c607.6153 18.3694 606.1625 19.5317 604.419 19.5317 cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%Trailer
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{userdict /EPSHandler1_pdfmark /cleartomark load put}
{ userdict /EPSHandler1_pdfmark /pdfmark load put} ifelse
[/EMC EPSHandler1_pdfmark
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF